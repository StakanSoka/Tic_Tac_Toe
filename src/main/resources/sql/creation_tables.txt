CREATE DATABASE tic_tac_toe;
USE tic_tac_toe;

CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, login VARCHAR(256) NOT NULL UNIQUE, password VARCHAR(256) NOT NULL,
                  role VARCHAR(30) NOT NULL, image VARCHAR(300) NOT NULL, nickname VARCHAR(60) NOT NULL,
                  registration_date DATE NOT NULL, coin INT NOT NULL);

CREATE TABLE bot(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(60) NOT NULL, image VARCHAR(300) NOT NULL,
                 difficulty VARCHAR(20) NOT NULL, coin INT NOT NULL);

CREATE TABLE user_bot_map(user_id INT NOT NULL, bot_id INT NOT NULL,
                          win CHAR(1) NOT NULL, FOREIGN KEY (user_id) REFERENCES user (id) ON DELETE CASCADE,
                          FOREIGN KEY (bot_id) REFERENCES bot (id) ON DELETE CASCADE);

CREATE TABLE  symbol(id INT PRIMARY KEY AUTO_INCREMENT, symbol CHAR(1) NOT NULL, price 	INT NOT NULL);

CREATE TABLE user_symbol_map(user_id INT NOT NULL, symbol_id INT NOT NULL,
                             acquisition DATE not null, active CHAR(1) NOT NULL,
                             FOREIGN KEY(user_id) REFERENCES user(id) ON DELETE CASCADE,
                             FOREIGN KEY(symbol_id) REFERENCES symbol(id) ON DELETE CASCADE);

CREATE TABLE bot_symbol_map(id INT PRIMARY KEY AUTO_INCREMENT, bot_id INT NOT NULL, symbol_id INT NOT NULL,
                            FOREIGN KEY(bot_id) REFERENCES bot(id) ON DELETE CASCADE,
                            FOREIGN KEY(symbol_id) REFERENCES symbol(id) ON DELETE CASCADE);

CREATE TABLE order_status(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(30) NOT NULL);

CREATE TABLE user_order(id INT PRIMARY KEY AUTO_INCREMENT, created_date DATE NOT NULL, modified_date DATE NOT NULL,
                        total_sum INT NOT NULL, status_id INT NOT NULL, user_id INT NOT NULL,
                        FOREIGN KEY (status_id) REFERENCES order_status(id) ON DELETE CASCADE,
                        FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE);

CREATE TABLE order_detail(id INT PRIMARY KEY AUTO_INCREMENT, table_id INT NOT NULL, item_id INT NOT NULL,
                          user_order_id INT NOT NULL,
                          FOREIGN KEY(user_order_id) REFERENCES user_order(id) ON DELETE CASCADE);

CREATE TABLE layout_pattern(id INT PRIMARY KEY AUTO_INCREMENT, position1 VARCHAR(72) NOT NULL,
                            position2 VARCHAR(72) NOT NULL, price INT NOT NULL);

CREATE TABLE user_layout_pattern_map(acquisition DATE NOT NULL, active CHAR(1) NOT NULL,
                                     user_id INT NOT NULL, layout_pattern_id INT NOT NULL,
                                     FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE,
                                     FOREIGN KEY (layout_pattern_id) REFERENCES layout_pattern(id) ON DELETE CASCADE);

CREATE TABLE bot_layout_pattern_map(bot_id INT NOT NULL, layout_pattern_id INT NOT NULL,
                                    FOREIGN KEY (bot_id) REFERENCES bot(id) ON DELETE CASCADE,
                                    FOREIGN KEY (layout_pattern_id) REFERENCES layout_pattern(id) ON DELETE CASCADE)